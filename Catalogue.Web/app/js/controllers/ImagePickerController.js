// Generated by IcedCoffeeScript 108.0.11
(function() {
  angular.module('app.controllers').controller('ImagePickerController', function($scope, $http, recordImage) {
    $scope.recordImage = angular.copy(recordImage);
    $scope.images = [];
    $scope.rowsPerPage = 3;
    $scope.imagesPerRow = 3;
    $scope.noOfPages = 0;
    $scope.currentPage = 0;
    $scope.page = [];

    /*$scope.images = 
    [
        {
            Url: "",
            Width: 2048,
            Height: 1360,
            FileType: "jpg",
            EditorName: "1",
            LastEdited: "2018-12-17T14:55:29",
            SizeInKB: 351.013671875,
            Crops: {
                ListingThumbnail: ""
            }
        }
    ]
     */
    $scope.getImages = function() {
      return $http.get('').then(function(response) {
        $scope.images = response.data;
        $scope.images = $scope.images.sort(function(first, second) {
          return new Date(second.LastEdited) - new Date(first.LastEdited);
        });
        console.log($scope.images);
        $scope.noOfPages = Math.ceil($scope.images.length / ($scope.rowsPerPage * $scope.imagesPerRow));
        return $scope.setPage($scope.currentPage);
      });
    };
    $scope.setPage = function(pageNo) {
      var noOfImagesPerPage;
      if (pageNo < 0 || pageNo === $scope.noOfPages) {
        return;
      }
      noOfImagesPerPage = $scope.rowsPerPage * $scope.imagesPerRow;
      if ($scope.images.length <= noOfImagesPerPage) {
        $scope.page = $scope.makePageFromImages($scope.images);
      } else {
        $scope.page = $scope.makePageFromImages($scope.images.slice(noOfImagesPerPage * pageNo, noOfImagesPerPage * pageNo + noOfImagesPerPage));
      }
      return $scope.currentPage = pageNo;
    };
    $scope.makePageFromImages = function(images) {
      var i, newPage, row, rows, _i;
      newPage = [];
      if (images.length <= $scope.imagesPerRow) {
        newPage.push(images);
      } else {
        rows = Math.ceil(images.length / $scope.imagesPerRow);
        for (i = _i = 0; 0 <= rows ? _i < rows : _i > rows; i = 0 <= rows ? ++_i : --_i) {
          row = images.slice(i * $scope.imagesPerRow, i * $scope.imagesPerRow + $scope.imagesPerRow);
          newPage.push(row);
        }
      }
      return newPage;
    };
    $scope.saveImage = function(image) {
      if (!$scope.recordImage) {
        $scope.recordImage = {
          url: null,
          height: 0,
          width: 0,
          crops: {
            squareUrl: null,
            thumbnailUrl: null
          }
        };
      }
      $scope.recordImage.url = image.Url;
      $scope.recordImage.width = image.Width;
      $scope.recordImage.height = image.Height;
      $scope.recordImage.crops.squareUrl = image.Crops.Square;
      return $scope.recordImage.crops.thumbnailUrl = image.Crops.ListingThumbnail;
    };
    $scope.ok = function() {
      return $scope.$close($scope.recordImage);
    };
    return $scope.getImages();
  });

}).call(this);

//# sourceMappingURL=ImagePickerController.js.map
