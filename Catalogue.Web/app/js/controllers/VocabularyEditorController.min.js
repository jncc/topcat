(function(){angular.module("app.controllers").controller("VocabularyEditorController",function(n,t,i,r,u){return n.reset=function(){return n.form=angular.copy(u),n.newVocab=u.id?!1:!0},n.removeKeyword=function(t){return n.form.keywords.splice(t,1)},n.addKeyword=function(){return n.form.keywords.push({id:"",value:""})},n.isClean=function(){return angular.equals(n.form,u)},n.isSaveHidden=function(){return n.isClean()},n.isCancelHidden=function(){return n.isClean()},n.save=function(){var i;return i=function(t){var s,i,h,f,e,c,l,o;if(t.data.success)u=t.data.vocab,n.form=angular.copy(u),n.validation={},n.reset(),n.notifications.add("Edits saved"),r.path("/vocabularies/editor/"+u.id);else if(n.validation=t.data.validation,i=t.data.validation.errors,i.length>0)for(n.notifications.add("There were errors"),f=0,c=i.length;f<c;f++)for(s=i[f],o=s.fields,e=0,l=o.length;e<l;e++)h=o[e],n.theForm[h].$setValidity("server",!1);return n.busy.stop()},n.busy.start(),n.newVocab?t.post("../api/vocabularies",n.form).then(i):t.put("../api/vocabularies?id="+u.id,n.form).then(i)},n.reset()})}).call(this);