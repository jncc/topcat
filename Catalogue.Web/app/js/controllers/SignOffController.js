// Generated by IcedCoffeeScript 108.0.11
(function() {
  angular.module('app.controllers').controller('SignOffController', function($scope, $http, $location, $timeout, signOffGroup) {
    var loadData, m;
    m = {
      openData: {
        summary: {},
        list: []
      },
      signOffStatus: {},
      signOffTimeoutMap: {}
    };
    $scope.m = m;
    loadData = function() {
      return $http.get('../api/publishing/pendingsignoff').success(function(result) {
        var r, _i, _len, _results;
        m.openData.list = result;
        _results = [];
        for (_i = 0, _len = result.length; _i < _len; _i++) {
          r = result[_i];
          _results.push(m.signOffStatus[r.id] = "Sign Off");
        }
        return _results;
      });
    };
    loadData();
    $scope.submitSignOff = function(recordId) {
      $scope.signOffRequest = {
        id: recordId,
        comment: ""
      };
      return $http.put('../api/publishing/signoff', $scope.signOffRequest).success(function(result) {
        m.signOffStatus[recordId] = "Signed Off";
        $scope.status.refresh();
        return $scope.notifications.add("Successfully signed off");
      })["catch"](function(error) {
        if (error.status === 401) {
          $scope.notifications.add("Unauthorised - not in valid sign off group");
        } else {
          $scope.notifications.add(error.data.exceptionMessage);
        }
        m.signOffStatus[recordId] = "Retry?";
        return delete m.signOffTimeoutMap[recordId];
      });
    };
    $scope.allowGraceTime = function(recordId) {
      if (m.signOffTimeoutMap[recordId] > 0) {
        m.signOffStatus[recordId] = "Cancel " + ("0" + m.signOffTimeoutMap[recordId]--).slice(-2);
        return $timeout($scope.allowGraceTime.bind(null, recordId), 1000);
      } else if (recordId in m.signOffTimeoutMap) {
        return $scope.submitSignOff(recordId);
      }
    };
    $scope.cancelSignOff = function(recordId) {
      delete m.signOffTimeoutMap[recordId];
      return m.signOffStatus[recordId] = "Sign Off";
    };
    return $scope.signOffButtonClick = function(recordId) {
      if (!(recordId in m.signOffTimeoutMap)) {
        m.signOffTimeoutMap[recordId] = 10;
        return $scope.allowGraceTime(recordId);
      } else {
        return $scope.cancelSignOff(recordId);
      }
    };
  });

}).call(this);

//# sourceMappingURL=SignOffController.js.map
